// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VehicleTracking.Persistence;

namespace VehicleTracking.Persistence.Migrations
{
    [DbContext(typeof(VehicleTrackingDbContext))]
    partial class VehicleTrackingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("VehicleTracking.Domain.Entities.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("KeyValues");

                    b.Property<string>("NewValues");

                    b.Property<string>("OldValues");

                    b.Property<string>("TableName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("VehicleTracking.Domain.Entities.TrackingRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("DeviceCode")
                        .HasMaxLength(50);

                    b.Property<string>("Latitude")
                        .HasMaxLength(50);

                    b.Property<string>("Longitude")
                        .HasMaxLength(50);

                    b.Property<DateTime>("RecordedDate");

                    b.Property<Guid>("TrackingRecordSnapshotId");

                    b.Property<string>("VehicleCode")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("TrackingRecordSnapshotId");

                    b.ToTable("TrackingRecords");
                });

            modelBuilder.Entity("VehicleTracking.Domain.Entities.TrackingRecordSnapshot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("RecordedDate");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<Guid>("VehicleId");

                    b.HasKey("Id");

                    b.ToTable("TrackingRecordSnapshots");
                });

            modelBuilder.Entity("VehicleTracking.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.Property<byte[]>("PasswordHash")
                        .HasMaxLength(64);

                    b.Property<byte[]>("PasswordSalt")
                        .HasMaxLength(128);

                    b.Property<string>("Token");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VehicleTracking.Domain.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("DeviceCode")
                        .HasMaxLength(50);

                    b.Property<string>("ExtendedData");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<string>("VehicleCode")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("VehicleCode")
                        .IsUnique();

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("VehicleTracking.Domain.Entities.TrackingRecord", b =>
                {
                    b.HasOne("VehicleTracking.Domain.Entities.TrackingRecordSnapshot", "TrackingRecordSnapshot")
                        .WithMany("TrackingRecords")
                        .HasForeignKey("TrackingRecordSnapshotId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VehicleTracking.Domain.Entities.User", b =>
                {
                    b.OwnsOne("VehicleTracking.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("UserId");

                            b1.Property<string>("City")
                                .HasColumnName("City")
                                .HasMaxLength(60);

                            b1.Property<string>("Country")
                                .HasColumnName("Country")
                                .HasMaxLength(60);

                            b1.Property<string>("State")
                                .HasColumnName("State")
                                .HasMaxLength(60);

                            b1.Property<string>("StreetAddress1")
                                .HasColumnName("StreetAddress1")
                                .HasMaxLength(60);

                            b1.Property<string>("StreetAddress2")
                                .HasColumnName("StreetAddress2")
                                .HasMaxLength(60);

                            b1.Property<string>("StreetAddress3")
                                .HasColumnName("StreetAddress3")
                                .HasMaxLength(60);

                            b1.Property<string>("ZipCode")
                                .HasColumnName("ZipCode")
                                .HasMaxLength(10);

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.HasOne("VehicleTracking.Domain.Entities.User")
                                .WithOne("Address")
                                .HasForeignKey("VehicleTracking.Domain.ValueObjects.Address", "UserId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
